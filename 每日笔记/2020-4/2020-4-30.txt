if(i & 0x1 ==1){ // 模拟ip 区分
                rx2w_buffer[i - nb_loss + nb_dup] = pkts_burst[i];
                rte_prefetch0(rte_pktmbuf_mtod(rx2w_buffer[i - nb_loss + nb_dup], void *));
                rx2w_buffer[i - nb_loss + nb_dup]->udata64 = rte_rdtsc();
            }else{
                rx2w_buffer2[i - nb_loss + nb_dup] = pkts_burst[i];
                rte_prefetch0(rte_pktmbuf_mtod(rx2w_buffer2[i - nb_loss + nb_dup], void *));
                rx2w_buffer2[i - nb_loss + nb_dup]->udata64 = rte_rdtsc();
            }
07点01分
起床

10点00分
   // 现在把dpdk-burst-replay 运行起来了，解决了之前segment fault的问题
 // 将ring 加入头指针队列，通过判断队列长度变化，确定成功加入了
   numenq = rte_ring_sp_enqueue(header_pointers, &rx_to_workers);
   // 取出失败，想问下您的想法
   void * temp_ring_point;
   int headpointers=rte_ring_dequeue(header_pointers,
                                   &(temp_ring_point));
   unsigned burst_size = rte_ring_sc_dequeue_burst((struct rte_ring *)temp_ring_point,
            (void *)burst_buffer, PKT_BURST_WORKER, NULL);
   if(burst_size >0){
        RTE_LOG(INFO, DEMU, "temp_ring_point burst_size %u\n",burst_size);
   }else RTE_LOG(INFO, DEMU, "temp_ring_point burst_fail %u\n",burst_size);

   参考 dpdk -examle 中的写法
   void *msg;
   if (rte_ring_dequeue(recv_ring, &msg) < 0){
       usleep(5);
       continue;
   }
   printf("core %u: Received '%s'\n", lcore_id, (char *)msg);
   rte_mempool_put(message_pool, msg);